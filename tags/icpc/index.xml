<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Icpc on 蛋餅的競程隨筆</title><link>https://omeletwithoutegg.github.io/tags/icpc/</link><description>Recent content in Icpc on 蛋餅的競程隨筆</description><generator>Hugo</generator><language>en-us</language><copyright>Omelet</copyright><lastBuildDate>Sat, 13 Jul 2024 22:44:05 +0800</lastBuildDate><atom:link href="https://omeletwithoutegg.github.io/tags/icpc/index.xml" rel="self" type="application/rss+xml"/><item><title>ICPC 競賽中如何製作 codebook</title><link>https://omeletwithoutegg.github.io/2024/07/13/icpc-codebook/</link><pubDate>Sat, 13 Jul 2024 22:44:05 +0800</pubDate><guid>https://omeletwithoutegg.github.io/2024/07/13/icpc-codebook/</guid><description>How to make team reference document in ICPC 前言 在 ICPC 競賽中一個不可或缺的元素就是在 規則 裡面被稱為 Team Reference Document 的東西。台大這邊俗稱叫 codebook。
在上一次的 WF 當中是規定每一隊可以帶至多 25 頁的紙本參考資料，必須是單面印刷，字體大小需要「0.5 公尺的距離下正常視力的人可以直接閱讀」，並且可以帶總共三份完全相同的拷貝。
codebook 是 ICPC 比賽與高中競賽相當不同的一點，平時就開始準備 codebook 可以讓你對這些模板更加熟悉，節省三人一機規則下寶貴的上機時間。
要放什麼？ 環境設定
我們隊上使用 vim，因此理所當然的會有一份 vimrc。
在 vimrc 中最佔篇幅的是我們設定的編譯快捷鍵 mapping，我們設定了三個快捷鍵： F8 是加了 sanitizer 跟 warning 的編譯，平常正常寫題時就按這個編譯。我們盡量把幾乎所有 warning 跟 sanitizer 都開起來，這樣比較容易在還沒上傳前就找到錯誤，也養成寫程式碼的好習慣。 F9 是加了 O2 flag 的編譯。sanitizer 會讓程式跑得慢很多，有許多情況會需要在本機測速度，例如「跑跑看這個爆搜多快，會過乾脆就這樣傳」、「worst case 跑多久」或是「這題 TL 有點緊繃，用一下 time 看隨機大測資怎麼樣」。 F10 是執行。我們隊的習慣是會把每題的執行檔都編譯成不同的檔案，例如 a.cpp 會編譯成 a，c2.cpp 會編譯成 c2。如果沒 precompile 的話，通常編譯的速度不算快，在 ICPC 當中有不少時間會同時開兩題以上，因此會想要能夠快速的想要切換到另外一題測試。</description></item></channel></rss>